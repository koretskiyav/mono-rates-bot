version: '3.8'

services:
  app:
    container_name: 'mono-bot-${NODE_ENV}'
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${APP_PORT}
    build:
      context: .
      target: '${NODE_ENV}'
      dockerfile: Dockerfile
    entrypoint: ['npm', 'run', 'start:${NODE_ENV}']
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - ./src:/app/src
    restart: unless-stopped
    depends_on:
      - postgres

  postgres:
    image: postgres:16.1-alpine
    container_name: 'postgres-${NODE_ENV}'
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - ./pgdata/data:/var/lib/postgresql/data

  pgadmin:
    links:
      - postgres:postgres
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - ./pgdata/pgadmin:/root/.pgadmin
    env_file:
      - .env

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - APP_PORT=${APP_PORT}
    ports:
      - 80:${NGINX_PORT}
    depends_on:
      - app
      - postgres
